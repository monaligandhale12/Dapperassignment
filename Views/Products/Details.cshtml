@model CurdOperationWithDapperNetCoreMVC_Demo.Models.ProductModel

@{
    ViewData["Title"] = "Details";
}



<div>
    <h2>Product Details</h2>
    
    <dl class="row card">
        <dt class = "col-sm-3">
            @Html.DisplayNameFor(model => model.ProductId)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductId)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProductName)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProductName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ProdcutDescription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ProdcutDescription)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedOn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UpdateOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UpdateOn)
        </dd>
    </dl>
</div>
<div>
    <a href="@Url.Action("Edit", "Products", new { id = Model.ProductId })" class="btn btn-sm btn-primary">Edit</a>
    |
    <a asp-action="Index" class="btn btn-info">Back to List</a>
</div>
